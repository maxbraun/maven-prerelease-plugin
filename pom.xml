<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>net.oneandone.maven.poms</groupId>
    <artifactId>foss-parent</artifactId>
    <version>1.3.3</version>
    <relativePath/>
  </parent>
  <groupId>net.oneandone.maven.plugins</groupId>
  <artifactId>prerelease</artifactId>
  <version>1.5.0-SNAPSHOT</version>
  <packaging>maven-plugin</packaging>

  <name>Maven Prerelease Plugin</name>
  <description>Creates and promotes pre-releases. Alternative to Maven's release plugins that's more atomic, faster and suitable
    for continuous delivery</description>
  <url>https://github.com/mlhartme/maven-application-plugin</url>
  <properties>
    <aetherVersion>1.13.1</aetherVersion>
    <mavenVersion>3.0.4</mavenVersion>
    <wsd.ypid>20236</wsd.ypid>
    <oneandone.java.source>1.7</oneandone.java.source>
    <oneandone.java.target>1.7</oneandone.java.target>
    <enforcer.skip>true</enforcer.skip><!-- TODO: dependency convergence -->
  </properties>
  <developers>
    <developer>
      <id>mhm</id>
      <name>Michael Hartmeier</name>
      <roles>
        <role>lead</role>
      </roles>
    </developer>
  </developers>
  <scm>
    <connection>scm:git:ssh://git@github.com/mlhartme/maven-prerelease-plugin.git</connection>
    <developerConnection>scm:git:ssh://git@github.com/mlhartme/maven-prerelease-plugin.git</developerConnection>
    <url>scm:git:ssh://git@github.com/mlhartme/maven-prerelease-plugin</url>
    <tag>HEAD</tag>
  </scm>
  <dependencies>
    <dependency>
      <groupId>net.oneandone</groupId>
      <artifactId>sushi</artifactId>
      <version>2.8.9</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-classworlds</artifactId>
      <version>2.4</version>
    </dependency>

    <dependency>
      <!-- not used directly, but I want to force using the latest version in the dependency tree:-->
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <version>2.0.7</version>
    </dependency>
    <dependency>
      <!-- not used directly, but I want to force using the latest version in the dependency tree:-->
      <!-- https://docs.sonatype.org/display/AETHER/Home also adds
             <dependency>
               <groupId>org.sonatype.aether</groupId>
               <artifactId>aether-impl</artifactId>
               <version>${aetherVersion}</version>
             </dependency>
          but I don't use it directly and maven-core brings it as a transitive dependency. -->
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-impl</artifactId>
      <version>${aetherVersion}</version>
    </dependency>

    <!-- maven dependencies to load poms -->
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <version>${mavenVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <version>${mavenVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <version>${mavenVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <version>${mavenVersion}</version>
    </dependency>
    <dependency>
      <!-- contains Maven RepositorySystem required for project builder: -->
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-compat</artifactId>
      <version>${mavenVersion}</version>
    </dependency>

    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-inject-plexus</artifactId>
      <version>2.2.3</version>
    </dependency>

    <!-- repository access: aether -->
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-api</artifactId>
      <version>${aetherVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-util</artifactId>
      <version>${aetherVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-connector-wagon</artifactId>
      <version>${aetherVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-aether-provider</artifactId>
      <version>${mavenVersion}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven.plugin-tools</groupId>
      <artifactId>maven-plugin-annotations</artifactId>
      <version>3.2</version>
      <!-- annotations are not needed for plugin execution so you can remove this dependency
           for execution with using provided scope -->
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-http-lightweight</artifactId>
      <version>2.4</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-plugin-plugin</artifactId>
        <version>3.2</version>
        <configuration>
          <!-- see http://jira.codehaus.org/browse/MNG-5346 -->
          <skipErrorNoDescriptorsFound>true</skipErrorNoDescriptorsFound>
        </configuration>
        <executions>
          <execution>
            <id>mojo-descriptor</id>
            <goals>
              <goal>descriptor</goal>
            </goals>
          </execution>
          <execution>
            <id>generated-helpmojo</id>
            <goals>
              <goal>helpmojo</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-invoker-plugin</artifactId>
        <version>1.7</version>
        <configuration>
          <settingsFile>${basedir}/src/it/settings.xml</settingsFile>
          <profiles><profile>extrarepos</profile></profiles>
          <localRepositoryPath>${basedir}/target/it/maven-local-repository</localRepositoryPath>
        </configuration>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>install</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
          </archive>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-plugin-plugin</artifactId>
        <version>3.2</version>
      </plugin>
    </plugins>
  </reporting>
</project>
